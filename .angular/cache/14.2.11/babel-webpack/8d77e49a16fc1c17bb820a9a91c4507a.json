{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-accounts.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../menu/menu.component\";\nexport let NewUserComponent = /*#__PURE__*/(() => {\n  class NewUserComponent {\n    constructor(service, formBuilder) {\n      this.service = service;\n      this.formBuilder = formBuilder;\n      this.userAccountForm = this.formBuilder.group({\n        InputId: new FormControl(\"\", Validators.required),\n        InputName: new FormControl(\"\", Validators.required),\n        InputLastName: new FormControl(\"\", Validators.required),\n        InputPhone: new FormControl(\"\", Validators.required),\n        InputEmail: new FormControl(\"\", Validators.required),\n        InputDirection: new FormControl(\"\", Validators.required),\n        InputUserAccount: new FormControl(\"\", Validators.required),\n        InputPassword: new FormControl(\"\", Validators.required),\n        InputRolType: new FormControl(\"\", Validators.required)\n      });\n      this.newUserAccount = {\n        _id: 0,\n        clientDirection: '',\n        clientEmail: '',\n        clientLastName: '',\n        clientName: '',\n        clientPassword: '',\n        clientPhone: 0,\n        clientRoleType: '',\n        clientUsername: '',\n        userAccountActive: \"\"\n      };\n    }\n\n    AddNewUser() {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n      this.newUserAccount = {\n        _id: (_a = this.userAccountForm.get('InputId')) === null || _a === void 0 ? void 0 : _a.value,\n        clientName: (_b = this.userAccountForm.get('InputName')) === null || _b === void 0 ? void 0 : _b.value,\n        clientLastName: (_c = this.userAccountForm.get('InputLastName')) === null || _c === void 0 ? void 0 : _c.value,\n        clientPhone: (_d = this.userAccountForm.get('InputPhone')) === null || _d === void 0 ? void 0 : _d.value,\n        clientDirection: (_e = this.userAccountForm.get('InputDirection')) === null || _e === void 0 ? void 0 : _e.value,\n        clientEmail: (_f = this.userAccountForm.get('InputEmail')) === null || _f === void 0 ? void 0 : _f.value,\n        clientPassword: (_g = this.userAccountForm.get('InputPassword')) === null || _g === void 0 ? void 0 : _g.value,\n        clientRoleType: (_h = this.userAccountForm.get('InputRolType')) === null || _h === void 0 ? void 0 : _h.value,\n        clientUsername: (_j = this.userAccountForm.get('InputUserAccount')) === null || _j === void 0 ? void 0 : _j.value //userAccountActive:\"true\"\n\n      };\n      this.service.PostUserAccount(this.newUserAccount).subscribe(result => {\n        alert(JSON.stringify(result));\n      }, error => {\n        alert(JSON.stringify(error));\n      });\n    }\n\n    ngOnInit() {}\n\n  }\n\n  NewUserComponent.ɵfac = function NewUserComponent_Factory(t) {\n    return new (t || NewUserComponent)(i0.ɵɵdirectiveInject(i1.UserAccountsService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n  };\n\n  NewUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewUserComponent,\n    selectors: [[\"app-new-user\"]],\n    decls: 44,\n    vars: 2,\n    consts: [[1, \"container-fluid\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\", \"justify-content-center\"], [1, \"col-sm-6\"], [\"for\", \"\"], [\"type\", \"number\", \"required\", \"\", \"formControlName\", \"InputId\", 1, \"form-control\", \"w-25\"], [\"type\", \"text\", \"required\", \"\", \"formControlName\", \"InputName\", 1, \"form-control\", \"w-\"], [\"type\", \"text\", \"required\", \"\", \"formControlName\", \"InputLastName\", 1, \"form-control\"], [\"type\", \"tel\", \"required\", \"\", \"formControlName\", \"InputPhone\", 1, \"form-control\"], [\"type\", \"email\", \"required\", \"\", \"formControlName\", \"InputEmail\", 1, \"form-control\"], [\"rows\", \"2\", \"type\", \"text\", \"required\", \"\", \"formControlName\", \"InputDirection\", 1, \"form-control\"], [\"type\", \"text\", \"required\", \"\", \"placeholder\", \"Puede ser el correo o un usuario custom\", \"formControlName\", \"InputUserAccount\", 1, \"form-control\"], [\"type\", \"password\", \"required\", \"\", \"formControlName\", \"InputPassword\", 1, \"form-control\"], [\"name\", \"\", \"id\", \"\", \"title\", \"Rol Actual\", \"required\", \"\", \"formControlName\", \"InputRolType\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"Administrator\"], [\"value\", \"Client\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function NewUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-menu\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"h4\", 1);\n        i0.ɵɵtext(3, \"Nuevo Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function NewUserComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.AddNewUser();\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Cedula\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵtext(11, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵelementStart(13, \"label\", 5);\n        i0.ɵɵtext(14, \"Apellidos\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementStart(16, \"label\", 5);\n        i0.ɵɵtext(17, \"Telefono\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementStart(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Correo Electronico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementStart(22, \"label\", 5);\n        i0.ɵɵtext(23, \"Direccion Fisica\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"textarea\", 11);\n        i0.ɵɵelementStart(25, \"label\", 5);\n        i0.ɵɵtext(26, \"Cuenta de Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 12)(28, \"br\");\n        i0.ɵɵelementStart(29, \"label\", 5);\n        i0.ɵɵtext(30, \"Contraase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵelementStart(32, \"label\", 5);\n        i0.ɵɵtext(33, \"Rol\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"select\", 14)(35, \"option\", 15);\n        i0.ɵɵtext(36, \"--SELECT--\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"option\", 16);\n        i0.ɵɵtext(38, \"Administrator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"option\", 17);\n        i0.ɵɵtext(40, \"Client\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(41, \"hr\");\n        i0.ɵɵelementStart(42, \"button\", 18);\n        i0.ɵɵtext(43, \" Agregar Nuevo Usuario \");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.userAccountForm);\n        i0.ɵɵadvance(38);\n        i0.ɵɵproperty(\"disabled\", ctx.userAccountForm.invalid);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i3.MenuComponent],\n    styles: [\"textarea[_ngcontent-%COMP%]{resize:none}input[_ngcontent-%COMP%]::-webkit-outer-spin-button, input[_ngcontent-%COMP%]::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}\"]\n  });\n  return NewUserComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}